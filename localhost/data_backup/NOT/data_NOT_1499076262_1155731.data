id§NOT_1499076262_1155731°datum§07.07.2017°DatumE§2017-07-07-00-00-00_NOT_1499076262_1155731°quelle§persistent°name§JSP, JSTL, EL: Online Guide und Implizite Objekte°kategorien§.url.resource.java-jsp-jstl-tomcat°info§<p><a href="http://www.jsptutorial.org/content/jstl">http://www.jsptutorial.org/content/jstl</a></p><p>EL: <a href="http://www.jsptutorial.org/content/el">http://www.jsptutorial.org/content/el</a></p><p><br></p>°text§<p><a href="http://www.jsptutorial.org/content/jstl">http://www.jsptutorial.org/content/jstl</a></p><p>EL: <a href="http://www.jsptutorial.org/content/el">http://www.jsptutorial.org/content/el</a></p><p><br></p><br/>-----<br/><p>&nbsp;</p><p>Implizite Objekte</p><p>&nbsp;</p><p>Bei der Entwicklung mit JavaServer Pages stehen einem in Skriptlets implizite Objekte zur Verfügung, die den Zugriff auf Request-Parameter, Session-Attribute u.ä. ermöglichen (s. dazu das Kapitel "Implizite Objekte"). Um Skriptlets ersetzen zu können, muss dieser Zugriff weitestgehend auch mit der Expression Language möglich sein. Daher verfügt auch diese über einen Satz impliziter Objekte.&nbsp;</p><p>Die folgende Tabelle listet alle impliziten Objekte auf und zeigt auf, wozu man diese benutzen kann:&nbsp;</p><p>Implizites Objekt Verwendung</p><p>cookie Erlaubt es, direkt auf ein javax.servlet.http.Cookie-Objekt zuzugreifen. Dieses Cookie muss unter diesem Namen vom Browser mitgeliefert worden sein.</p><p>header Dieses Objekt bietet den Zugriff auf einen Header unter diesem Namen. Gibt es mehrere Header mit diesem Namen, wird der erste zurück geliefert.</p><p>headerValues Im Unterschied zum vorhergehenden Objekt "header" liefert dieses Objekt immer ein Array mit allen Header-Werten zurück.</p><p>initParam Zum Zugriff auf in der web.xml definierte Context-Parameter kann man dieses Objekt verwenden.</p><p>param Request-Parameter (bspw. Formularwerte) werden mit diesem Objekt ausgelesen. Wie bei den Objekten "header" und "headerValues" greift dieses Objekt auch wenn mehrere vorhanden sind nur auf den ersten Wert zu.</p><p>paramValues Liefert ein Array zurück, das alle Request-Parameter mit diesem Namen enthält.</p><p>pageContext Das PageContext-Objekt dieser JSP wird hiermit angesprochen. Über dieses Objekt kann man bspw. auf die Request-, Session- und ServletContext-Objekte zugreifen.</p><p>pageScope Dient dem Zugriff auf Attribute im Gültigkeitsbereich "page".</p><p>requestScope Dient dem Zugriff auf Attribute im Gültigkeitsbereich "request".</p><p>sessionScope Dient dem Zugriff auf Attribute im Gültigkeitsbereich "session".</p><p>applicationScope Dient dem Zugriff auf Attribute im Gültigkeitsbereich "application".</p><p>&nbsp;</p><p>Mit Ausnahme des Objekts pageContext handelt es sich durchweg um Maps, auf die mit Strings als Key zugegriffen werden kann.&nbsp;</p><p>Die Objekte pageScope, requestScope, sessionScope und applicationScope ermöglichen den Zugriff auf die Attribute des jeweiligen Gültigkeitsbereiche. Das Konzept der Gültigkeitsbereiche ist im Kapitel Beans in JSPs erläutert. Wurde bspw. in den request-Gültigkeitsbereich ein Objekt der Vokabel-Klasse per request.setAttribute("requestedWord", requestedWord) hinzugefügt, so kann man auf das Attribut word dieses Objekt in der JSP mit dem folgenden EL-Statement zugreifen:&nbsp;</p><p>&nbsp;</p><p>${requestScope.requestedWord.translation}&nbsp;</p>°date§11.9.2015°files§°art§Wissen