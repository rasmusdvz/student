id§NOT_1510842061447°datum§16.11.2017°DatumE§2017-11-16-00-00-00_NOT_1510842061447°art§Code Snippet°name§SSL Zertifikat Info anzeigen, Ablaufdatum usw.°info§<p><br></p>°text§<p><br></p><br/>-----<br/><p>On a Linux system, you can track down the root certificate in the /etc/ssl/certs directory, either as an individual file or as part of a large file such as ca-certificates.crt (Ubuntu) or ca-bundle.crt (Red Hat). You can use openssl x509 -noout -subject -in filename where filename is a single certificate file to get the Subject of each certificate; comparing those to what you extracted from the certificate chain above will allow you to track down the server certificate.</p><p><br></p><p>https://www.shellhacks.com/openssl-check-ssl-certificate-expiration-date/</p><p>https://stackoverflow.com/questions/25760596/how-to-terminate-openssl-s-client-after-connection</p><p><br></p><p>&nbsp;echo "Q" | openssl s_client -showcerts -servername dvz-mv.de -connect www.dvz-mv.de:443</p><p>&nbsp;</p><p>&nbsp;echo "Q" | openssl s_client -showcerts -servername dvz-mv.de -connect www.dvz-mv.de:443 2&gt;/dev/null | openssl x509 -noout -issuer -subject -dates</p><p>&nbsp;</p><p>&nbsp;echo "Q" | openssl s_client -showcerts -servername dvz-mv.de -connect www.dvz-mv.de:443 2&gt;/dev/null | openssl x509 -text</p><p>&nbsp;</p><p>#!/bin/bash&nbsp;</p><p>while read DOMAIN; do</p><p>&nbsp; echo "Q" | openssl s_client -showcerts -servername $DOMAIN -connect $DOMAIN:443 2&gt;/dev/null | openssl x509 -noout -issuer -subject -dates | tee ./cert-info.txt</p><p>done &lt;./ssl-domains.txt</p>°files§